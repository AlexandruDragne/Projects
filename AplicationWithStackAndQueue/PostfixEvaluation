import java.util.Stack;

public class PostfixEvaluation {

	public static void main(String[] args) {
		
		String [] tokens = {"3", "2", "1", "+", "2", "3", "2", "^", "^", "*", "+", "8", "5", "1", "2", "*", "2", "/", "-", "/", "-"};

		printExpresion(tokens);
    
		System.out.println();
		
		int n = postfixEvaluation(tokens);
		
		System.out.println(n); 
	}
	
	public static int postfixEvaluation(String[] tokens) {
		Stack<Integer> stack = new Stack<>();
		int val1 = 0, val2 = 0;
		
		for (int i=0; i<tokens.length; i++) {
			switch(tokens[i]) {
				case "+": 
					val1 = stack.pop();
					val2 = stack.pop();
					stack.push(val2+val1);
					break;
				case "-":
					val1 = stack.pop();
					val2 = stack.pop();
					stack.push(val2-val1);
					break;
				case "*":
					val1 = stack.pop();
					val2 = stack.pop();
					stack.push(val2*val1);
					break;
				case "/":
					val1 = stack.pop();
					val2 = stack.pop();
					stack.push(val2/val1);
					break;
				case "^":
					val1 = stack.pop();
					val2 = stack.pop();
					stack.push((int) Math.pow(val2, val1));
					break;
				default:
					stack.push(Integer.valueOf(tokens[i]));
			}
		}
		
		int result = stack.pop();
		
		return result;
	}
	
	private static void printExpresion(String[] s) {
		System.out.print("Forma postfixata este: ");
		for (int i=0; i<s.length; i++) {
			System.out.print(s[i] + " ");
		}
	}
}
